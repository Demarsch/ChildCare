<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:registry="clr-namespace:Registry"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:core="clr-namespace:Core;assembly=StuffLib"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <DataTemplate DataType="{x:Type registry:ScheduleViewModel}">
        <DataTemplate.Resources>
            <ControlTemplate x:Key="ListBoxItem"  TargetType="{x:Type ListBoxItem}">
                <ContentPresenter />
            </ControlTemplate>
            <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />
            <core:UniversalConverter x:Key="BooleanToInversedVisibilityConverter" DefaultValue="{x:Static Visibility.Visible}">
                <core:ConverterItem To="{x:Static Visibility.Collapsed}">
                    <core:ConverterItem.From>
                        <system:Boolean>True</system:Boolean>
                    </core:ConverterItem.From>
                </core:ConverterItem>
            </core:UniversalConverter>
            <core:UniversalConverter x:Key="BooleanToHiddenVisibilityConverter" DefaultValue="{x:Static Visibility.Visible}">
                <core:ConverterItem To="{x:Static Visibility.Hidden}">
                    <core:ConverterItem.From>
                        <system:Boolean>True</system:Boolean>
                    </core:ConverterItem.From>
                </core:ConverterItem>
            </core:UniversalConverter>
            <core:UniversalConverter x:Key="ModeToButtonTextConverter" DefaultValue="Перейти в режим просмотра">
                <core:ConverterItem To="Перейти в режим назначений">
                    <core:ConverterItem.From>
                        <system:Boolean>True</system:Boolean>
                    </core:ConverterItem.From>
                </core:ConverterItem>
            </core:UniversalConverter>
            <core:UniversalConverter x:Key="ModeToDateSelectorTextConverter" DefaultValue="Выберите день назначения">
                <core:ConverterItem To="Расписание работы кабинетов на">
                    <core:ConverterItem.From>
                        <system:Boolean>True</system:Boolean>
                    </core:ConverterItem.From>
                </core:ConverterItem>
            </core:UniversalConverter>
        </DataTemplate.Resources>
        <xctk:BusyIndicator IsBusy="{Binding IsBusy}" BusyContent="{Binding BusyStatus}">
            <DockPanel LastChildFill="True">
                <!--Schedule filters-->
                <DockPanel DockPanel.Dock="Top" LastChildFill="False">
                    <Button DockPanel.Dock="Left" MinWidth="190" Margin="5" Padding="5" Background="White" Content="{Binding IsInReadOnlyMode, Converter={StaticResource ModeToButtonTextConverter}}"
                            Command="{Binding ChangeModeCommand}" Visibility="{Binding IsMovingAssignment, Converter={StaticResource BooleanToHiddenVisibilityConverter}}" />
                    <TextBlock DockPanel.Dock="Left" Text="{Binding IsInReadOnlyMode, Converter={StaticResource ModeToDateSelectorTextConverter}}" MinWidth="190" Margin="5" VerticalAlignment="Center" TextAlignment="Right" />
                    <DatePicker DockPanel.Dock="Left" SelectedDateFormat="Long" Width="130" SelectedDate="{Binding SelectedDate, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="5" 
                            IsEnabled="{Binding DataSourcesAreLoaded}" VerticalAlignment="Center"/>
                    <Button DockPanel.Dock="Right" Width="170" Margin="5" Padding="5" Content="Редактировать расписание" Command="{Binding OpenScheduleEditorCommand, Mode=OneTime}" />
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsInReadOnlyMode, Converter={StaticResource BooleanToInversedVisibilityConverter}}">
                        <Grid Width="180" VerticalAlignment="Center">
                            <ComboBox HorizontalAlignment="Stretch" ItemsSource="{Binding RecordTypes}" SelectedItem="{Binding SelectedRecordType}" DisplayMemberPath="Name"
                                  Margin="5" IsEnabled="{Binding IsMovingAssignment, Converter={StaticResource InverseBoolConverter}}"/>
                            <TextBlock Text="Выберите услугу" HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="RecordTypeSelectionText" IsHitTestVisible="False"
                                       Margin="11 0 0 0" Visibility="Collapsed"/>
                        </Grid>
                        <Grid Width="180" VerticalAlignment="Center">
                            <ComboBox HorizontalAlignment="Stretch" ItemsSource="{Binding Rooms}" SelectedItem="{Binding SelectedRoom}" DisplayMemberPath="NumberAndName"
                                  Margin="5"/>
                            <TextBlock Text="Выберите кабинет" HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="RoomSelectionText" IsHitTestVisible="False"
                                       Margin="11 0 0 0" Visibility="Collapsed"/>
                        </Grid>
                        <Button Content="Отменить перенос" MinWidth="150" Margin="5" Padding="5" Background="White" Visibility="{Binding IsMovingAssignment, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Command="{Binding CancelAssignmentMovementCommand, Mode=OneTime}"/>
                        
                    </StackPanel>
                </DockPanel>
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <!--Time tickers-->
                    <ScrollViewer Grid.Row="1" Grid.Column="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden" core:ScrollSynchronizer.VerticalScrollGroup="ScheduleVerticalScroll">
                        <ListBox IsHitTestVisible="False" ItemsSource="{Binding TimeTickers}" Width="200" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="Transparent"
                                 BorderThickness="0 1 0 1">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <xctk:TimelinePanel BeginDate="{Binding OpenTime}" EndDate="{Binding CloseTime}" Orientation="Vertical" OverlapBehavior="Stretch"
                                                        UnitSize="{x:Static core:Configuration.ScheduleUnitPerTimeInterval}" UnitTimeSpan="{x:Static core:Configuration.ScheduleUnitTimeInterval}"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="xctk:TimelinePanel.Date" Value="{Binding StartTime, Mode=OneTime}" />
                                    <Setter Property="xctk:TimelinePanel.DateEnd" Value="{Binding EndTime, Mode=OneTime}" />
                                    <Setter Property="Template" Value="{StaticResource ListBoxItem}" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </ScrollViewer>
                    <!--Room headers-->
                    <ScrollViewer Grid.Row="0" Grid.Column="1" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden" core:ScrollSynchronizer.HorizontalScrollGroup="ScheduleHorizontalScroll">
                        <StackPanel Orientation="Horizontal">
                            <ItemsControl  ItemsSource="{Binding FilteredRooms}" IsEnabled="False" VerticalContentAlignment="Stretch">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type registry:RoomViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="200" />
                                            </Grid.ColumnDefinitions>
                                            <Border Background="LightSkyBlue" BorderBrush="Black" BorderThickness="0.5" HorizontalAlignment="Stretch" >
                                                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <TextBlock HorizontalAlignment="Center" Margin="3" Text="{Binding Number, StringFormat='#{0}', Mode=OneTime}" />
                                                    <TextBlock HorizontalAlignment="Center" Margin="3" Text="{Binding Name, Mode=OneTime}" />
                                                </StackPanel>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ScrollBar Orientation="Vertical" Visibility="Hidden" />
                        </StackPanel>
                    </ScrollViewer>
                    <!--Assignments-->
                    <Grid Grid.Row="1" Grid.Column="1" >
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" core:ScrollSynchronizer.HorizontalScrollGroup="ScheduleHorizontalScroll"
                                   core:ScrollSynchronizer.VerticalScrollGroup="ScheduleVerticalScroll">
                            <ItemsControl ItemsSource="{Binding FilteredRooms}">
                                <i:Interaction.Behaviors>
                                    <core:IgnoreMouseWheelBehavior />
                                </i:Interaction.Behaviors>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </ScrollViewer>
                        <TextBlock Visibility="{Binding NoRoomIsFound, Converter={StaticResource BooleanToVisibilityConverter}}" FontWeight="Bold" FontSize="16" IsHitTestVisible="False"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">
                            <Run Text="Под указанные критерии не подходит ни один кабинет." />
                            <LineBreak />
                            <Run Text="Попробуйте снять часть фильтров" />
                        </TextBlock>
                    </Grid>
                </Grid>
            </DockPanel>
        </xctk:BusyIndicator>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectedRoom}" Value="{x:Null}">
                <Setter TargetName="RoomSelectionText" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedRecordType}" Value="{x:Null}">
                <Setter TargetName="RecordTypeSelectionText" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>