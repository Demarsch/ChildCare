<UserControl x:Class="Shared.PatientRecords.Views.PersonRecordListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:popup="clr-namespace:Core.Wpf.PopupWindowActionAware;assembly=Core.Wpf"
             xmlns:views="clr-namespace:Shared.PatientRecords.Views"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="250" Width="250">
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding VisitEditorInteractionRequest, Mode=OneWay}">
            <popup:PopupWindowAction IsModal="True">
                <popup:PopupWindowAction.WindowContent>
                    <views:VisitEditorView/>
                </popup:PopupWindowAction.WindowContent>
            </popup:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding VisitCloseInteractionRequest, Mode=OneWay}">
            <popup:PopupWindowAction IsModal="True">
                <popup:PopupWindowAction.WindowContent>
                    <views:VisitCloseView/>
                </popup:PopupWindowAction.WindowContent>
            </popup:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>            
        </Grid.ColumnDefinitions>

        <ToggleButton Grid.Row="0" Background="White" Margin="1" BorderBrush="Black" Height="50">
            <StackPanel Orientation="Horizontal">
                <Image Source="pack://application:,,,/Core;component/Resources/Images/AmbCard48x48.png" />
                <TextBlock VerticalAlignment="Center" Text="{Binding AmbNumber}" Margin="5" FontSize="20" FontWeight="Bold"/>
            </StackPanel>
        </ToggleButton>

        <TreeView x:Name="itemsTree" Grid.Row="1" Margin="1,0,1,1" 
                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" 
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ItemsSource="{Binding RootItems, Mode=TwoWay}" 
                    PreviewMouseRightButtonDown="OnPreviewMouseRightButtonDown" 
                    MouseDown="PermissionTree_MouseDown">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TreeViewItem" xmlns:s="clr-namespace:System;assembly=mscorlib">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="10" />
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <ToggleButton IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded,Mode=TwoWay}" ClickMode="Press" Name="Expander">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Style.Resources>
                                                    <ResourceDictionary />
                                                </Style.Resources>
                                                <Setter Property="UIElement.Focusable">
                                                    <Setter.Value>
                                                        <s:Boolean>False</s:Boolean>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="FrameworkElement.Width">
                                                    <Setter.Value>
                                                        <s:Double>16</s:Double>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="FrameworkElement.Height">
                                                    <Setter.Value>
                                                        <s:Double>16</s:Double>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="30" Height="30">
                                                                <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                    <Path.Data>
                                                                        <PathGeometry Figures="M0,0L0,10L10,0z" />
                                                                    </Path.Data>
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver">
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Trigger.Value>
                                                                        <s:Boolean>True</s:Boolean>
                                                                    </Trigger.Value>
                                                                </Trigger>
                                                                <Trigger Property="ToggleButton.IsChecked">
                                                                    <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF595959</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush>#FF262626</SolidColorBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Trigger.Value>
                                                                        <s:Boolean>True</s:Boolean>
                                                                    </Trigger.Value>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Border CornerRadius="4" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True" Grid.Column="1">
                                        <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                    <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TreeViewItem.IsExpanded">
                                        <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
                                        <Trigger.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Trigger.Value>
                                    </Trigger>
                                    <Trigger Property="ItemsControl.HasItems">
                                        <Setter TargetName="Expander" Property="UIElement.Visibility" Value="{x:Static Visibility.Hidden}" />
                                        <Trigger.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Trigger.Value>
                                    </Trigger>
                                    <Trigger Property="TreeViewItem.IsSelected">
                                        <Setter TargetName="Bd" Property="Panel.Background" Value="Transparent" />
                                        <Setter Property="TextElement.Foreground" Value="#FFFF1F1F" />
                                        <Trigger.Value>
                                            <s:Boolean>True</s:Boolean>
                                        </Trigger.Value>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TreeViewItem.IsSelected">
                                                <Condition.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                            <Condition Property="Selector.IsSelectionActive">
                                                <Condition.Value>
                                                    <s:Boolean>False</s:Boolean>
                                                </Condition.Value>
                                            </Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Panel.Background" Value="Transparent" />
                                        <Setter Property="TextElement.Foreground" Value="#FFFF1F1F" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled">
                                        <Setter Property="TextElement.Foreground">
                                            <Setter.Value>
                                                <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                            </Setter.Value>
                                        </Setter>
                                        <Trigger.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Trigger.Value>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True" Margin="10,0,0,0"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>    
      
        <ContentControl Content="{Binding BusyMediator}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
        <ContentControl Content="{Binding CriticalFailureMediator}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
    </Grid>
</UserControl>
