<UserControl x:Class="PatientInfoModule.Views.InfoContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:PatientInfoModule.ViewModels"
             xmlns:converters="clr-namespace:Core.Wpf.Converters;assembly=Core.Wpf"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:Core.Wpf.Behaviors;assembly=Core.Wpf"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="1024" d:DataContext="{d:DesignInstance viewModels:InfoContentViewModel}">
    <Grid>
        <Grid HorizontalAlignment="Stretch"
              VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Column="0"
                    Grid.Row="0"
                    Grid.RowSpan="5"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Margin="2"
                    VerticalAlignment="Stretch"
                    Width="150"
                    Height="200">
                <Button Command="{Binding TakePhotoCommand}">
                    <StackPanel VerticalAlignment="Stretch">
                        <Image Source="{Binding PhotoURI}"
                               VerticalAlignment="Stretch"
                               HorizontalAlignment="Center" />
                        <TextBlock VerticalAlignment="Bottom"
                                   TextWrapping="Wrap"
                                   TextAlignment="Center"
                                   Text="Нажмите, чтобы сделать фото" />
                    </StackPanel>
                </Button>
            </Border>
            <TextBlock Grid.Row="0"
                       Grid.Column="1"
                       Text="Фамилия" />
            <TextBox Grid.Row="0"
                     Grid.Column="2"
                     HorizontalAlignment="Stretch"
                     Text="{Binding LastName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     Validation.ErrorTemplate="{DynamicResource ValidationTemplateRightIcon}"
                     MaxLength="100" />
            <StackPanel Grid.Row="0"
                        Grid.Column="3"
                        Grid.RowSpan="4"
                        VerticalAlignment="Top"
                        Width="0">
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsNameChanged}"
                                         Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="Width">
                                            <DoubleAnimation To="200"
                                                             Duration="0:0:0.75"
                                                             AccelerationRatio="0.7"
                                                             DecelerationRatio="0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="Width">
                                            <DoubleAnimation Duration="0:0:0.75"
                                                             AccelerationRatio="0.7"
                                                             DecelerationRatio="0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Label Content="Причина смены"
                       BorderThickness="0 0 0 1"
                       BorderBrush="Black"
                       HorizontalAlignment="Stretch"
                       HorizontalContentAlignment="Center" />
                <RadioButton Content="Ошибочный ввод" 
                             IsChecked="{Binding IsIncorrectName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Validation.ErrorTemplate="{DynamicResource ValidationTemplate}"/>
                <RadioButton Content="Иная причина"
                             IsChecked="{Binding IsNewName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Validation.ErrorTemplate="{DynamicResource ValidationTemplate}"/>
                <TextBlock Text="Новые данные вступают в силу с" 
                           Visibility="{Binding IsNewName, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}"/>
                <DatePicker HorizontalAlignment="Left"
                            SelectedDate="{Binding NewNameStartDate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                            Visibility="{Binding IsNewName, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}"
                            Validation.ErrorTemplate="{DynamicResource ValidationTemplate}"/>
            </StackPanel>
            <TextBlock Grid.Row="1"
                       Grid.Column="1"
                       Text="Имя" />
            <TextBox Grid.Row="1"
                     Grid.Column="2"
                     HorizontalAlignment="Stretch"
                     MaxLength="100"
                     Text="{Binding FirstName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     Validation.ErrorTemplate="{DynamicResource ValidationTemplateRightIcon}"/>
            <TextBlock Grid.Row="2"
                       Grid.Column="1"
                       Text="Отчество" />
            <TextBox Grid.Row="2"
                     Grid.Column="2"
                     HorizontalAlignment="Stretch"
                     MaxLength="100"
                     Text="{Binding MiddleName, UpdateSourceTrigger=PropertyChanged}" />
            <TextBlock Grid.Row="3"
                       Grid.Column="1"
                       Text="Дата рождения" />
            <StackPanel Grid.Row="3"
                        Grid.Column="2"
                        Grid.ColumnSpan="2"
                        Orientation="Horizontal">
                <DatePicker SelectedDate="{Binding BirthDate, ValidatesOnDataErrors=True}"
                            Margin="5 5 22 5"
                            Validation.ErrorTemplate="{DynamicResource ValidationTemplate}"/>
                <TextBlock Text="Пол" />
                <ToggleButton Background="Transparent"
                              IsChecked="{Binding IsMale}"
                              Width="90">
                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Stretch">
                        <TextBlock Text="{Binding IsMale, Converter={x:Static converters:GenderToTextConverter.Instance}}" />
                        <Image Source="{Binding IsMale, Converter={x:Static converters:GenderToImageConverter.Instance}}"
                               Width="24"
                               Height="24"
                               Stretch="Fill" />
                    </StackPanel>
                </ToggleButton>
                <TextBlock Text="СНИЛС" />
                <TextBox Text="{Binding Snils, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Width="140"
                         MaxLength="14"
                         Validation.ErrorTemplate="{DynamicResource ValidationTemplateRightIcon}">
                    <i:Interaction.Behaviors>
                        <behaviors:SnilsInputHelperBehavior />
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBlock Text="ЕНП" />
                <TextBox Text="{Binding MedNumber, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Width="140"
                         MaxLength="16"
                         Validation.ErrorTemplate="{DynamicResource ValidationTemplateRightIcon}">
                    <i:Interaction.Behaviors>
                        <behaviors:MedNumberInputHelperBehavior />
                    </i:Interaction.Behaviors>
                </TextBox>
            </StackPanel>
            <TextBlock Grid.Row="4"
                       Grid.Column="1"
                       VerticalAlignment="Center"
                       Margin="5"
                       Text="Телефоны" />
            <Grid Grid.Row="4"
                  Grid.Column="2"
                  Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0"
                         HorizontalAlignment="Stretch"
                         Text="{Binding Phones, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Column="1"
                           Text="Эл. почта" />
                <TextBox Grid.Column="2"
                         HorizontalAlignment="Stretch"
                         Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </Grid>
        <ContentControl Content="{Binding BusyMediator}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" />
        <ContentControl Content="{Binding CriticalFailureMediator}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" />
    </Grid>
</UserControl>