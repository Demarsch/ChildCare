//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.Data
{
    using System;
    using System.Collections.Generic;
    
    [Serializable]
    public partial class Person : ICloneable
    {
        public Person()
        {
            this.InsuranceDocuments = new HashSet<InsuranceDocument>();
            this.PersonAddresses = new HashSet<PersonAddress>();
            this.PersonDisabilities = new HashSet<PersonDisability>();
            this.PersonEducations = new HashSet<PersonEducation>();
            this.PersonHealthGroups = new HashSet<PersonHealthGroup>();
            this.PersonIdentityDocuments = new HashSet<PersonIdentityDocument>();
            this.PersonMaritalStatuses = new HashSet<PersonMaritalStatus>();
            this.PersonNames = new HashSet<PersonName>();
            this.PersonNationalities = new HashSet<PersonNationality>();
            this.PersonOuterDocuments = new HashSet<PersonOuterDocument>();
            this.PersonRelatives = new HashSet<PersonRelative>();
            this.PersonRelatives1 = new HashSet<PersonRelative>();
            this.PersonSocialStatuses = new HashSet<PersonSocialStatus>();
            this.PersonStaffs = new HashSet<PersonStaff>();
            this.RecordContracts = new HashSet<RecordContract>();
            this.RecordContracts1 = new HashSet<RecordContract>();
            this.Visits = new HashSet<Visit>();
            this.Diagnoses = new HashSet<Diagnosis>();
            this.PersonDiagnoses = new HashSet<PersonDiagnos>();
            this.Assignments = new HashSet<Assignment>();
            this.Users = new HashSet<User>();
            this.PersonTalons = new HashSet<PersonTalon>();
            this.Records = new HashSet<Record>();
            this.CommissionProtocols = new HashSet<CommissionProtocol>();
        }
    
        public int Id { get; set; }
        public string FullName { get; set; }
        public string ShortName { get; set; }
        public System.DateTime BirthDate { get; set; }
        public bool IsMale { get; set; }
        public string Snils { get; set; }
        public string MedNumber { get; set; }
        public Nullable<int> PhotoId { get; set; }
        public string Phones { get; set; }
        public string Email { get; set; }
        public Nullable<System.DateTime> DeleteDateTime { get; set; }
        public string AmbNumberString { get; set; }
        public int AmbNumber { get; set; }
        public int Year { get; set; }
        public int AmbCardFirstListHashCode { get; set; }
        public int PersonHospListHashCode { get; set; }
        public int RadiationListHashCode { get; set; }
        public Nullable<System.DateTime> AmbNumberCreationDate { get; set; }
    
        [NonSerialized]
    	protected Document document;
    
    	public virtual Document Document
    	{
     		get { return document; }
     		set { document = value; }
    	}
        [NonSerialized]
    	protected ICollection<InsuranceDocument> insuranceDocuments;
    
    	public virtual ICollection<InsuranceDocument> InsuranceDocuments
    	{
     		get { return insuranceDocuments; }
     		set { insuranceDocuments = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonAddress> personAddresses;
    
    	public virtual ICollection<PersonAddress> PersonAddresses
    	{
     		get { return personAddresses; }
     		set { personAddresses = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonDisability> personDisabilities;
    
    	public virtual ICollection<PersonDisability> PersonDisabilities
    	{
     		get { return personDisabilities; }
     		set { personDisabilities = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonEducation> personEducations;
    
    	public virtual ICollection<PersonEducation> PersonEducations
    	{
     		get { return personEducations; }
     		set { personEducations = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonHealthGroup> personHealthGroups;
    
    	public virtual ICollection<PersonHealthGroup> PersonHealthGroups
    	{
     		get { return personHealthGroups; }
     		set { personHealthGroups = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonIdentityDocument> personIdentityDocuments;
    
    	public virtual ICollection<PersonIdentityDocument> PersonIdentityDocuments
    	{
     		get { return personIdentityDocuments; }
     		set { personIdentityDocuments = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonMaritalStatus> personMaritalStatuses;
    
    	public virtual ICollection<PersonMaritalStatus> PersonMaritalStatuses
    	{
     		get { return personMaritalStatuses; }
     		set { personMaritalStatuses = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonName> personNames;
    
    	public virtual ICollection<PersonName> PersonNames
    	{
     		get { return personNames; }
     		set { personNames = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonNationality> personNationalities;
    
    	public virtual ICollection<PersonNationality> PersonNationalities
    	{
     		get { return personNationalities; }
     		set { personNationalities = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonOuterDocument> personOuterDocuments;
    
    	public virtual ICollection<PersonOuterDocument> PersonOuterDocuments
    	{
     		get { return personOuterDocuments; }
     		set { personOuterDocuments = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonRelative> personRelatives;
    
    	public virtual ICollection<PersonRelative> PersonRelatives
    	{
     		get { return personRelatives; }
     		set { personRelatives = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonRelative> personRelatives1;
    
    	public virtual ICollection<PersonRelative> PersonRelatives1
    	{
     		get { return personRelatives1; }
     		set { personRelatives1 = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonSocialStatus> personSocialStatuses;
    
    	public virtual ICollection<PersonSocialStatus> PersonSocialStatuses
    	{
     		get { return personSocialStatuses; }
     		set { personSocialStatuses = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonStaff> personStaffs;
    
    	public virtual ICollection<PersonStaff> PersonStaffs
    	{
     		get { return personStaffs; }
     		set { personStaffs = value; }
    	}
        [NonSerialized]
    	protected ICollection<RecordContract> recordContracts;
    
    	public virtual ICollection<RecordContract> RecordContracts
    	{
     		get { return recordContracts; }
     		set { recordContracts = value; }
    	}
        [NonSerialized]
    	protected ICollection<RecordContract> recordContracts1;
    
    	public virtual ICollection<RecordContract> RecordContracts1
    	{
     		get { return recordContracts1; }
     		set { recordContracts1 = value; }
    	}
        [NonSerialized]
    	protected ICollection<Visit> visits;
    
    	public virtual ICollection<Visit> Visits
    	{
     		get { return visits; }
     		set { visits = value; }
    	}
        [NonSerialized]
    	protected ICollection<Diagnosis> diagnoses;
    
    	public virtual ICollection<Diagnosis> Diagnoses
    	{
     		get { return diagnoses; }
     		set { diagnoses = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonDiagnos> personDiagnoses;
    
    	public virtual ICollection<PersonDiagnos> PersonDiagnoses
    	{
     		get { return personDiagnoses; }
     		set { personDiagnoses = value; }
    	}
        [NonSerialized]
    	protected ICollection<Assignment> assignments;
    
    	public virtual ICollection<Assignment> Assignments
    	{
     		get { return assignments; }
     		set { assignments = value; }
    	}
        [NonSerialized]
    	protected ICollection<User> users;
    
    	public virtual ICollection<User> Users
    	{
     		get { return users; }
     		set { users = value; }
    	}
        [NonSerialized]
    	protected ICollection<PersonTalon> personTalons;
    
    	public virtual ICollection<PersonTalon> PersonTalons
    	{
     		get { return personTalons; }
     		set { personTalons = value; }
    	}
        [NonSerialized]
    	protected ICollection<Record> records;
    
    	public virtual ICollection<Record> Records
    	{
     		get { return records; }
     		set { records = value; }
    	}
        [NonSerialized]
    	protected ICollection<CommissionProtocol> commissionProtocols;
    
    	public virtual ICollection<CommissionProtocol> CommissionProtocols
    	{
     		get { return commissionProtocols; }
     		set { commissionProtocols = value; }
    	}
    
    	public object Clone()
    	{
    		return MemberwiseClone();
    	}
    }
}
