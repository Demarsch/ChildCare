<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mvvm="clr-namespace:Core.Wpf.Mvvm"
                    xmlns:converters="clr-namespace:Core.Wpf.Converters"
                    xmlns:misc="clr-namespace:Core.Wpf.Misc">
    <Duration x:Key="AnimationDuration">0:0:0.75</Duration>
    <!--Default styles-->
    <Style x:Key="TextHighlightStyle"
           TargetType="{x:Type Run}">
        <Setter Property="Background"
                Value="SteelBlue" />
        <Setter Property="Foreground"
                Value="White" />
    </Style>
    <!--Data templates-->
    <!--Busy Mediator-->
    <DataTemplate DataType="{x:Type mvvm:BusyMediator}">
        <Border HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsHitTestVisible="{Binding IsActive}"
                x:Name="border">
            <Border.Background>
                <SolidColorBrush Color="Transparent" />
            </Border.Background>
            <Label Content="{Binding Message}"
                   
                   Opacity="0"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Padding="20"
                   BorderBrush="Black"
                   BorderThickness="1"
                   Background="White"
                   x:Name="label" />
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsActive}"
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetName="label"
                                    TargetProperty="Opacity">
                            <DoubleAnimation To="1"
                                             Duration="{StaticResource AnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard TargetName="label"
                                    TargetProperty="Opacity">
                            <DoubleAnimation To="0"
                                             Duration="{StaticResource AnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--CriticalFailureMediator-->
    <DataTemplate DataType="{x:Type mvvm:CriticalFailureMediator}">
        <DataTemplate.Resources>
            <converters:Converter x:Key="IsExpandedToTextConverter">
                <converters:ConverterItem From="{x:Static misc:StaticBoolean.True}"
                                          To="Скрыть детали" />
                <converters:ConverterItem From="{x:Static misc:StaticBoolean.False}"
                                          To="Показать детали" />
            </converters:Converter>
        </DataTemplate.Resources>
        <Border HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsHitTestVisible="{Binding IsActive}">
            <Border.Background>
                <SolidColorBrush Color="Transparent" />
            </Border.Background>
            <Border Opacity="0"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Background="White"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    x:Name="innerBorder">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               Text="{Binding Message}"
                               
                               MaxWidth="700"
                               TextWrapping="Wrap"
                               VerticalAlignment="Center"
                               Margin="5" />
                    <Button Grid.Row="0"
                            Grid.Column="1"
                            Margin="5"
                            Padding="5"
                            Content="{Binding RetryCommand.CommandName}"
                            Command="{Binding RetryCommand.Command}"
                            CommandParameter="{Binding RetryCommand.CommandParameter}"
                            VerticalAlignment="Center"
                            Visibility="{Binding RetryCommand.HasCommand, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}" />
                    <Expander Grid.Row="1"
                              Grid.Column="0"
                              Grid.ColumnSpan="2"
                              Header="{Binding IsExpanded, RelativeSource={RelativeSource Self}, Converter={StaticResource IsExpandedToTextConverter}}"
                              Visibility="{Binding HasException, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}">
                        <TextBox HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 MaxHeight="200"
                                 IsReadOnly="True"
                                 Margin="5"
                                 Text="{Binding Exception, Mode=OneWay, Converter={x:Static converters:ToStringConverter.Instance}}" />
                    </Expander>
                </Grid>
            </Border>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsActive}"
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetName="innerBorder"
                                    TargetProperty="Opacity">
                            <DoubleAnimation To="1"
                                             Duration="{StaticResource AnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard TargetName="innerBorder"
                                    TargetProperty="Opacity">
                            <DoubleAnimation To="0"
                                             Duration="{StaticResource AnimationDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>