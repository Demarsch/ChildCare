<UserControl x:Class="Core.Wpf.Controls.TreeViewComboBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:Core.Wpf.Converters"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:Converter x:Key="FilterToVisibilityConverter"
                                  DefaultValue="{x:Static Visibility.Visible}">
                <converters:ConverterItem From="{x:Null}"
                                          To="{x:Static Visibility.Collapsed}" />
                <converters:ConverterItem From=""
                                          To="{x:Static Visibility.Collapsed}" />
            </converters:Converter>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ContentControl HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        x:Name="comboBoxPlaceholder" />
        <Popup StaysOpen="False"
               Placement="Bottom"
               MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
               x:Name="popup"
               Closed="PopupOnClosed"
               Opened="PopupOnOpened">
            <Border Background="White"
                    BorderBrush="Black"
                    BorderThickness="1">
                <StackPanel>
                    <Grid>
                        <TreeView x:Name="treeView"
                                  BorderThickness="0"
                                  MinWidth="{Binding ActualWidth, ElementName=comboBoxPlaceholder}"
                                  ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                  ItemTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                  TreeViewItem.Selected="TreeView_OnSelected"
                                  SelectedItemChanged="TreeViewOnSelectedItemChanged"
                                  FocusVisualStyle="{x:Null}">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="TreeViewItem"
                                       BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                    <Setter Property="HorizontalContentAlignment"
                                            Value="Stretch" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TreeViewItem">
                                                <StackPanel>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"
                                                                              MinWidth="19" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>
                                                        <ToggleButton
                                                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ClickMode="Press"
                                                            Name="Expander">
                                                            <ToggleButton.Style>
                                                                <Style TargetType="ToggleButton">
                                                                    <Setter Property="Focusable"
                                                                            Value="false" />
                                                                    <Setter Property="Width"
                                                                            Value="16" />
                                                                    <Setter Property="Height"
                                                                            Value="16" />
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="ToggleButton">
                                                                                <Border Padding="5,5,5,5"
                                                                                        Background="#00FFFFFF"
                                                                                        Width="16"
                                                                                        Height="16">
                                                                                    <Path Fill="#00FFFFFF"
                                                                                          Stroke="#FF989898"
                                                                                          Name="ExpandPath">
                                                                                        <Path.Data>
                                                                                            <PathGeometry
                                                                                                Figures="M0,0L0,6L6,0z" />
                                                                                        </Path.Data>
                                                                                        <Path.RenderTransform>
                                                                                            <RotateTransform
                                                                                                Angle="135"
                                                                                                CenterX="3"
                                                                                                CenterY="3" />
                                                                                        </Path.RenderTransform>
                                                                                    </Path>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger
                                                                                        Property="UIElement.IsMouseOver"
                                                                                        Value="True">
                                                                                        <Setter TargetName="ExpandPath"
                                                                                                Property="Shape.Stroke"
                                                                                                Value="#FF1BBBFA" />
                                                                                        <Setter TargetName="ExpandPath"
                                                                                                Property="Shape.Fill"
                                                                                                Value="#00FFFFFF" />
                                                                                    </Trigger>
                                                                                    <Trigger
                                                                                        Property="ToggleButton.IsChecked"
                                                                                        Value="True">
                                                                                        <Setter TargetName="ExpandPath"
                                                                                                Property="UIElement.RenderTransform">
                                                                                            <Setter.Value>
                                                                                                <RotateTransform
                                                                                                    Angle="180"
                                                                                                    CenterX="3"
                                                                                                    CenterY="3" />
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter TargetName="ExpandPath"
                                                                                                Property="Shape.Fill"
                                                                                                Value="#FF595959" />
                                                                                        <Setter TargetName="ExpandPath"
                                                                                                Property="Shape.Stroke"
                                                                                                Value="#FF262626" />
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ToggleButton.Style>
                                                        </ToggleButton>
                                                        <Border x:Name="Bd"
                                                                HorizontalAlignment="Stretch"
                                                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                                Padding="{TemplateBinding Control.Padding}"
                                                                Background="{TemplateBinding Panel.Background}"
                                                                SnapsToDevicePixels="True"
                                                                Grid.Row="0"
                                                                Grid.Column="1">
                                                            <ContentPresenter x:Name="PART_Header"
                                                                              Content="{TemplateBinding HeaderedContentControl.Header}"
                                                                              ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                                              ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                                              ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                                              ContentSource="Header"
                                                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                        </Border>
                                                        <ItemsPresenter x:Name="ItemsHost"
                                                                        Grid.Column="1"
                                                                        Grid.Row="1" />
                                                    </Grid>
                                                </StackPanel>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="TreeViewItem.IsExpanded"
                                                             Value="False">
                                                        <Setter TargetName="ItemsHost"
                                                                Property="UIElement.Visibility"
                                                                Value="Collapsed" />
                                                    </Trigger>
                                                    <Trigger Property="ItemsControl.HasItems"
                                                             Value="False">
                                                        <Setter TargetName="Expander"
                                                                Property="UIElement.Visibility"
                                                                Value="Hidden" />
                                                    </Trigger>
                                                    <Trigger Property="TreeViewItem.IsSelected"
                                                             Value="True">
                                                        <Setter TargetName="Bd"
                                                                Property="Panel.Background"
                                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                        <Setter Property="TextElement.Foreground"
                                                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="TreeViewItem.IsSelected"
                                                                       Value="True" />
                                                            <Condition Property="Selector.IsSelectionActive"
                                                                       Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="Bd"
                                                                Property="Panel.Background"
                                                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                        <Setter Property="TextElement.Foreground"
                                                                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                                    </MultiTrigger>
                                                    <Trigger Property="UIElement.IsEnabled"
                                                             Value="False">
                                                        <Setter Property="TextElement.Foreground"
                                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </TreeView>
                        <TextBlock HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   IsHitTestVisible="False"
                                   Margin="5"
                                   Text="Нет подходящих элементов"
                                   Visibility="{Binding NoFilteredItems, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={x:Static converters:BoolToVisibilityConverter.Instance}}" />
                    </Grid>
                    <Border HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            BorderBrush="Black"
                            BorderThickness="0 1 0 0"
                            Visibility="{Binding Filter, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource FilterToVisibilityConverter}}">
                        <Grid HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">
                            <TextBlock HorizontalAlignment="Stretch"
                                       VerticalAlignment="Center"
                                       Foreground="DimGray"
                                       FontStyle="Italic"
                                       Margin="3 0 3 3"
                                       Text="{Binding Filter, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                            <Button Template="{StaticResource CloseButtonTemplate}"
                                    HorizontalAlignment="Right"
                                    Margin="0 2 2 2"
                                    Click="OnClearFilterButtonClick" />
                        </Grid>
                    </Border>
                </StackPanel>
            </Border>
        </Popup>
    </Grid>
</UserControl>