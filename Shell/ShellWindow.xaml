<fluent:RibbonWindow x:Class="Shell.ShellWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:fluent="urn:fluent-ribbon"
                     xmlns:regions="http://prismlibrary.com/"
                     xmlns:shared="clr-namespace:Shell.Shared;assembly=Shell.Shared"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:shell="clr-namespace:Shell"
                     xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                     xmlns:views="clr-namespace:Core.Wpf.Views;assembly=Core.Wpf"
                     mc:Ignorable="d"
                     Title="Добро пожаловать"
                     Height="350"
                     Width="525"
                     WindowState="Maximized"
                     d:DataContext="{d:DesignInstance shell:ShellWindowViewModel}">
    <fluent:RibbonWindow.Resources>
        <xctk:VisibilityToBoolConverter x:Key="VisibilityToBoolConverter" />
    </fluent:RibbonWindow.Resources>
    <Grid>
        <DockPanel LastChildFill="True">
            <shell:RibbonEx regions:RegionManager.RegionName="{x:Static shared:RegionNames.ModuleList}"
                           DockPanel.Dock="Top"
                           x:Name="ribbon">
                <shell:RibbonEx.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment"
                                Value="Center" />
                    </Style>
                </shell:RibbonEx.Resources>
                <fluent:Ribbon.Menu>
                    <fluent:Backstage IsEnabled="{Binding CanOpenMenu}"
                                      IsOpen="{Binding IsMenuOpen, Mode=TwoWay}">
                        <fluent:Backstage.Header>
                            <TextBlock Margin="3"
                                       Text="Меню" />
                        </fluent:Backstage.Header>
                        <fluent:BackstageTabControl
                            regions:RegionManager.RegionName="{x:Static shared:RegionNames.MainMenu}" />
                    </fluent:Backstage>
                </fluent:Ribbon.Menu>
                <shell:RibbonEx.ContextMenuOverride>
                    <ContextMenu ItemsSource="{Binding PlacementTarget.Tabs, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                        <ContextMenu.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="IsCheckable"
                                        Value="True" />
                                <Setter Property="IsChecked"
                                        Value="{Binding Visibility, Converter={StaticResource VisibilityToBoolConverter}}" />
                                <Setter Property="Header"
                                        Value="{Binding Header}" />
                            </Style>
                        </ContextMenu.ItemContainerStyle>
                    </ContextMenu>
                </shell:RibbonEx.ContextMenuOverride>
            </shell:RibbonEx>
            <Grid>
                <ContentControl regions:RegionManager.RegionName="{x:Static shared:RegionNames.ModuleContent}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" />
                <ContentControl Content="{Binding BusyMediator}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" />
                <ContentControl Content="{Binding FailureMediator}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" />
            </Grid>
        </DockPanel>
        <xctk:WindowContainer ModalBackgroundBrush="#33333333">
            <views:ChildDialogWindow x:Name="childDialogWindow"
                                     WindowStartupLocation="Center"
                                     WindowStyle="None" />
        </xctk:WindowContainer>
    </Grid>
</fluent:RibbonWindow>